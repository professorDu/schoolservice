<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.usts.college.dao.DormmanagerMapper">
  <resultMap id="BaseResultMap" type="com.usts.college.bean.Dormmanager">
    <id column="dorm_id" jdbcType="INTEGER" property="dormId" />
    <result column="dorm_name" jdbcType="VARCHAR" property="dormName" />
    <result column="dorm_username" jdbcType="VARCHAR" property="dormUsername" />
    <result column="dorm_password" jdbcType="VARCHAR" property="dormPassword" />
    <result column="dorm_gender" jdbcType="CHAR" property="dormGender" />
    <result column="dorm_tel" jdbcType="VARCHAR" property="dormTel" />
    <result column="apart_pid" jdbcType="INTEGER" property="apartPid" />
  </resultMap>
  <resultMap type="com.usts.college.bean.Dormmanager" id="WithApartResultMap">
    <id column="dorm_id" jdbcType="INTEGER" property="dormId" />
    <result column="dorm_name" jdbcType="VARCHAR" property="dormName" />
    <result column="dorm_username" jdbcType="VARCHAR" property="dormUsername" />
    <result column="dorm_password" jdbcType="VARCHAR" property="dormPassword" />
    <result column="dorm_gender" jdbcType="CHAR" property="dormGender" />
    <result column="dorm_tel" jdbcType="VARCHAR" property="dormTel" />
    <result column="apart_pid" jdbcType="INTEGER" property="apartPid" />
    <association property="apart" javaType="com.usts.college.bean.Apart">
      <id column="apart_id" property="apartId"/>
      <result column="apart_apa" property="apartApa"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    dorm_id, dorm_name, dorm_username, dorm_password, dorm_gender, dorm_tel, apart_pid
  </sql>
  <sql id="WithApart_Column_List">
  	dm.dorm_id, dm.dorm_name, dm.dorm_username, dm.dorm_password, dm.dorm_gender, dm.dorm_tel, dm.apart_pid,a.apart_id, a.apart_apa
  </sql>
  <!-- List<Dormmanager> selectByExampleWithApart(DormmanagerExample example);

    Dormmanager selectByPrimaryKeyWithApart(Integer dormId); -->
  <select id="selectByPrimaryKeyWithApart" resultMap="WithApartResultMap">
    select
    <include refid="WithApart_Column_List" />
    from dormmanager dm
    LEFT JOIN apart a ON dm.`apart_pid`=a.`apart_id`
    where dorm_id = #{dormId,jdbcType=INTEGER}
  </select>
  <select id="selectByExampleWithApart" resultMap="WithApartResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithApart_Column_List" />
    from dormmanager dm
    LEFT JOIN apart a ON dm.`apart_pid`=a.`apart_id`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.usts.college.bean.DormmanagerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dormmanager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from dormmanager
    where dorm_id = #{dormId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dormmanager
    where dorm_id = #{dormId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.usts.college.bean.DormmanagerExample">
    delete from dormmanager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.usts.college.bean.Dormmanager">
    insert into dormmanager (dorm_id, dorm_name, dorm_username,
      dorm_password, dorm_gender, dorm_tel,
      apart_pid)
    values (#{dormId,jdbcType=INTEGER}, #{dormName,jdbcType=VARCHAR}, #{dormUsername,jdbcType=VARCHAR},
      #{dormPassword,jdbcType=VARCHAR}, #{dormGender,jdbcType=CHAR}, #{dormTel,jdbcType=VARCHAR},
      #{apartPid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.usts.college.bean.Dormmanager">
    insert into dormmanager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dormId != null">
        dorm_id,
      </if>
      <if test="dormName != null">
        dorm_name,
      </if>
      <if test="dormUsername != null">
        dorm_username,
      </if>
      <if test="dormPassword != null">
        dorm_password,
      </if>
      <if test="dormGender != null">
        dorm_gender,
      </if>
      <if test="dormTel != null">
        dorm_tel,
      </if>
      <if test="apartPid != null">
        apart_pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dormId != null">
        #{dormId,jdbcType=INTEGER},
      </if>
      <if test="dormName != null">
        #{dormName,jdbcType=VARCHAR},
      </if>
      <if test="dormUsername != null">
        #{dormUsername,jdbcType=VARCHAR},
      </if>
      <if test="dormPassword != null">
        #{dormPassword,jdbcType=VARCHAR},
      </if>
      <if test="dormGender != null">
        #{dormGender,jdbcType=CHAR},
      </if>
      <if test="dormTel != null">
        #{dormTel,jdbcType=VARCHAR},
      </if>
      <if test="apartPid != null">
        #{apartPid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.usts.college.bean.DormmanagerExample" resultType="java.lang.Long">
    select count(*) from dormmanager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dormmanager
    <set>
      <if test="record.dormId != null">
        dorm_id = #{record.dormId,jdbcType=INTEGER},
      </if>
      <if test="record.dormName != null">
        dorm_name = #{record.dormName,jdbcType=VARCHAR},
      </if>
      <if test="record.dormUsername != null">
        dorm_username = #{record.dormUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.dormPassword != null">
        dorm_password = #{record.dormPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.dormGender != null">
        dorm_gender = #{record.dormGender,jdbcType=CHAR},
      </if>
      <if test="record.dormTel != null">
        dorm_tel = #{record.dormTel,jdbcType=VARCHAR},
      </if>
      <if test="record.apartPid != null">
        apart_pid = #{record.apartPid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dormmanager
    set dorm_id = #{record.dormId,jdbcType=INTEGER},
    dorm_name = #{record.dormName,jdbcType=VARCHAR},
    dorm_username = #{record.dormUsername,jdbcType=VARCHAR},
    dorm_password = #{record.dormPassword,jdbcType=VARCHAR},
    dorm_gender = #{record.dormGender,jdbcType=CHAR},
    dorm_tel = #{record.dormTel,jdbcType=VARCHAR},
    apart_pid = #{record.apartPid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.usts.college.bean.Dormmanager">
    update dormmanager
    <set>
      <if test="dormName != null">
        dorm_name = #{dormName,jdbcType=VARCHAR},
      </if>
      <if test="dormUsername != null">
        dorm_username = #{dormUsername,jdbcType=VARCHAR},
      </if>
      <if test="dormPassword != null">
        dorm_password = #{dormPassword,jdbcType=VARCHAR},
      </if>
      <if test="dormGender != null">
        dorm_gender = #{dormGender,jdbcType=CHAR},
      </if>
      <if test="dormTel != null">
        dorm_tel = #{dormTel,jdbcType=VARCHAR},
      </if>
      <if test="apartPid != null">
        apart_pid = #{apartPid,jdbcType=INTEGER},
      </if>
    </set>
    where dorm_id = #{dormId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.usts.college.bean.Dormmanager">
    update dormmanager
    set dorm_name = #{dormName,jdbcType=VARCHAR},
      dorm_username = #{dormUsername,jdbcType=VARCHAR},
      dorm_password = #{dormPassword,jdbcType=VARCHAR},
      dorm_gender = #{dormGender,jdbcType=CHAR},
      dorm_tel = #{dormTel,jdbcType=VARCHAR},
      apart_pid = #{apartPid,jdbcType=INTEGER}
    where dorm_id = #{dormId,jdbcType=INTEGER}
  </update>
</mapper>